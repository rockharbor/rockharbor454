/**
 * Generates event when user makes new movement (like a swipe on a touchscreen).
 * @version 1.2.0
 * @link https://github.com/Promo/wheel-indicator
 * @license MIT
 */
var WheelIndicator=function(){function t(t){var e={callback:function(){},elem:document,preventMouse:!0};this.eventWheel="onwheel"in document?"wheel":"mousewheel",this._options=a(e,t),this._deltaArray=[0,0,0],this._isAcceleration=!1,this._isStopped=!0,this._direction="",this._timer="",this._isWorking=!0;var r=this;this._wheelHandler=function(t){r._isWorking&&(n.call(r,t),r._options.preventMouse&&i(t))},o(this._options.elem,this.eventWheel,this._wheelHandler)}function e(t){t.direction=this._direction,this._options.callback.call(this,t)}function i(t){t=t||window.event,t.preventDefault?t.preventDefault():t.returnValue=!1}function n(t){var i=this,n=h(t);if(0!==n){var o=n>0?"down":"up",s=i._deltaArray.length,a=!1,c=0,l,u;for(clearTimeout(i._timer),i._timer=setTimeout(function(){i._deltaArray=[0,0,0],i._isStopped=!0,i._direction=o},150),u=0;u<s;u++)0!==i._deltaArray[u]&&(i._deltaArray[u]>0?++c:--c);Math.abs(c)===s&&(l=c>0?"down":"up")!==i._direction&&(a=!0,i._direction=o),i._isStopped||(a?(i._isAcceleration=!0,e.call(this,t)):Math.abs(c)===s&&r.call(this,t)),i._isStopped&&(i._isStopped=!1,i._isAcceleration=!0,i._direction=o,e.call(this,t)),i._deltaArray.shift(),i._deltaArray.push(n)}}function r(t){var i=Math.abs(this._deltaArray[0]),n=Math.abs(this._deltaArray[1]),r=Math.abs(this._deltaArray[2]),o=Math.abs(h(t));o>r&&r>n&&n>i&&(this._isAcceleration||(e.call(this,t),this._isAcceleration=!0)),o<r&&r<=n&&(this._isAcceleration=!1)}function o(t,e,i){t.addEventListener?t.addEventListener(e,i,!1):t.attachEvent&&t.attachEvent("on"+e,i)}function s(t,e,i){t.removeEventListener?t.removeEventListener(e,i,!1):t.detachEvent&&t.detachEvent("on"+e,i)}function a(t,e){var i={},n;for(n in t)Object.prototype.hasOwnProperty.call(t,n)&&(i[n]=t[n]);for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&(i[n]=e[n]);return i}t.prototype={constructor:t,turnOn:function(){return this._isWorking=!0,this},turnOff:function(){return this._isWorking=!1,this},setOptions:function(t){return this._options=a(this._options,t),this},getOption:function(t){var e=this._options[t];if(void 0!==e)return e;throw new Error("Unknown option")},destroy:function(){return s(this._options.elem,this.eventWheel,this._wheelHandler),this}};var h=function(t){return(h=t.wheelDelta&&!t.deltaY?function(t){return-1*t.wheelDelta}:function(t){return t.deltaY})(t)};return t}();"object"==typeof exports&&(module.exports=WheelIndicator);